// <auto-generated>
// This file was automatically generated by Biohazrd and should not be modified by hand!
// </auto-generated>
#nullable enable
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace Mochi.DearImGui
{
    [StructLayout(LayoutKind.Explicit, Size = 32)]
    public unsafe partial struct ImGuiListClipper
    {
        [FieldOffset(0)] public int DisplayStart;

        [FieldOffset(4)] public int DisplayEnd;

        [FieldOffset(8)] public int ItemsCount;

        [FieldOffset(12)] public float ItemsHeight;

        [FieldOffset(16)] public float StartPosY;

        [FieldOffset(24)] public void* TempData;

        [DllImport("Mochi.DearImGui.Native", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??0ImGuiListClipper@@QEAA@XZ", ExactSpelling = true)]
        private static extern void Constructor_PInvoke(ImGuiListClipper* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public ImGuiListClipper()
        {
            fixed (ImGuiListClipper* @this = &this)
            { Constructor_PInvoke(@this); }
        }

        [DllImport("Mochi.DearImGui.Native", CallingConvention = CallingConvention.Cdecl, EntryPoint = "??1ImGuiListClipper@@QEAA@XZ", ExactSpelling = true)]
        private static extern void Destructor_PInvoke(ImGuiListClipper* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Destructor()
        {
            fixed (ImGuiListClipper* @this = &this)
            { Destructor_PInvoke(@this); }
        }

        [DllImport("Mochi.DearImGui.Native", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?Begin@ImGuiListClipper@@QEAAXHM@Z", ExactSpelling = true)]
        private static extern void Begin_PInvoke(ImGuiListClipper* @this, int items_count, float items_height);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Begin(int items_count, float items_height = -1f)
        {
            fixed (ImGuiListClipper* @this = &this)
            { Begin_PInvoke(@this, items_count, items_height); }
        }

        [DllImport("Mochi.DearImGui.Native", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?End@ImGuiListClipper@@QEAAXXZ", ExactSpelling = true)]
        private static extern void End_PInvoke(ImGuiListClipper* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void End()
        {
            fixed (ImGuiListClipper* @this = &this)
            { End_PInvoke(@this); }
        }

        [DllImport("Mochi.DearImGui.Native", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?Step@ImGuiListClipper@@QEAA_NXZ", ExactSpelling = true)]
        private static extern byte Step_PInvoke(ImGuiListClipper* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public bool Step()
        {
            byte __result;

            fixed (ImGuiListClipper* @this = &this)
            { __result = Step_PInvoke(@this); }

            return Unsafe.As<byte, bool>(ref __result);
        }

        [DllImport("Mochi.DearImGui.Native", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?ForceDisplayRangeByIndices@ImGuiListClipper@@QEAAXHH@Z", ExactSpelling = true)]
        private static extern void ForceDisplayRangeByIndices_PInvoke(ImGuiListClipper* @this, int item_min, int item_max);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void ForceDisplayRangeByIndices(int item_min, int item_max)
        {
            fixed (ImGuiListClipper* @this = &this)
            { ForceDisplayRangeByIndices_PInvoke(@this, item_min, item_max); }
        }
    }
}
