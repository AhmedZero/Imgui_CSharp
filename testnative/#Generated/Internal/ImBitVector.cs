// <auto-generated>
// This file was automatically generated by Biohazrd and should not be modified by hand!
// </auto-generated>
#nullable enable
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace Mochi.DearImGui.Internal
{
    [StructLayout(LayoutKind.Explicit, Size = 16)]
    public unsafe partial struct ImBitVector
    {
        [FieldOffset(0)] public ImVector<uint> Storage;

        [DllImport("Mochi.DearImGui.Native", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?Create@ImBitVector@@QEAAXH@Z", ExactSpelling = true)]
        private static extern void Create_PInvoke(ImBitVector* @this, int sz);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Create(int sz)
        {
            fixed (ImBitVector* @this = &this)
            { Create_PInvoke(@this, sz); }
        }

        [DllImport("Mochi.DearImGui.Native", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?Clear@ImBitVector@@QEAAXXZ", ExactSpelling = true)]
        private static extern void Clear_PInvoke(ImBitVector* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Clear()
        {
            fixed (ImBitVector* @this = &this)
            { Clear_PInvoke(@this); }
        }

        [DllImport("Mochi.DearImGui.Native", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?TestBit@ImBitVector@@QEBA_NH@Z", ExactSpelling = true)]
        private static extern byte TestBit_PInvoke(ImBitVector* @this, int n);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public bool TestBit(int n)
        {
            byte __result;

            fixed (ImBitVector* @this = &this)
            { __result = TestBit_PInvoke(@this, n); }

            return Unsafe.As<byte, bool>(ref __result);
        }

        [DllImport("Mochi.DearImGui.Native", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?SetBit@ImBitVector@@QEAAXH@Z", ExactSpelling = true)]
        private static extern void SetBit_PInvoke(ImBitVector* @this, int n);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void SetBit(int n)
        {
            fixed (ImBitVector* @this = &this)
            { SetBit_PInvoke(@this, n); }
        }

        [DllImport("Mochi.DearImGui.Native", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?ClearBit@ImBitVector@@QEAAXH@Z", ExactSpelling = true)]
        private static extern void ClearBit_PInvoke(ImBitVector* @this, int n);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void ClearBit(int n)
        {
            fixed (ImBitVector* @this = &this)
            { ClearBit_PInvoke(@this, n); }
        }
    }
}
