// <auto-generated>
// This file was automatically generated by Biohazrd and should not be modified by hand!
// </auto-generated>
#nullable enable
using Mochi.DearImGui.Infrastructure;
using System.Diagnostics;
using System.Numerics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace Mochi.DearImGui.Internal
{
    [StructLayout(LayoutKind.Explicit, Size = 312)]
    public unsafe partial struct ImGuiViewportP
    {
        [FieldOffset(0)] public ImGuiViewport Base;

        [FieldOffset(96)] public int Idx;

        [FieldOffset(100)] public int LastFrameActive;

        [FieldOffset(104)] public int LastFrontMostStampCount;

        [FieldOffset(108)] public uint LastNameHash;

        [FieldOffset(112)] public Vector2 LastPos;

        [FieldOffset(120)] public float Alpha;

        [FieldOffset(124)] public float LastAlpha;

        [FieldOffset(128)] public short PlatformMonitor;

        [FieldOffset(130)] [MarshalAs(UnmanagedType.I1)] public bool PlatformWindowCreated;

        [FieldOffset(136)] public ImGuiWindow* Window;

        [FieldOffset(144)] public (int x, int y) DrawListsLastFrame;

        [FieldOffset(152)] public ConstantArray_ImDrawList__UNICODE_0020____UNICODE_002A___2 DrawLists;

        [FieldOffset(168)] public ImDrawData DrawDataP;

        [FieldOffset(224)] public ImDrawDataBuilder DrawDataBuilder;

        [FieldOffset(256)] public Vector2 LastPlatformPos;

        [FieldOffset(264)] public Vector2 LastPlatformSize;

        [FieldOffset(272)] public Vector2 LastRendererSize;

        [FieldOffset(280)] public Vector2 WorkOffsetMin;

        [FieldOffset(288)] public Vector2 WorkOffsetMax;

        [FieldOffset(296)] public Vector2 BuildWorkOffsetMin;

        [FieldOffset(304)] public Vector2 BuildWorkOffsetMax;

        [DllImport("Mochi.DearImGui.Native", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper47", ExactSpelling = true)]
        private static extern void Constructor_PInvoke(ImGuiViewportP* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public ImGuiViewportP()
        {
            fixed (ImGuiViewportP* @this = &this)
            { Constructor_PInvoke(@this); }
        }

        [DllImport("Mochi.DearImGui.Native", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper48", ExactSpelling = true)]
        private static extern void Destructor_PInvoke(ImGuiViewportP* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Destructor()
        {
            fixed (ImGuiViewportP* @this = &this)
            { Destructor_PInvoke(@this); }
        }

        [DllImport("Mochi.DearImGui.Native", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?ClearRequestFlags@ImGuiViewportP@@QEAAXXZ", ExactSpelling = true)]
        private static extern void ClearRequestFlags_PInvoke(ImGuiViewportP* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void ClearRequestFlags()
        {
            fixed (ImGuiViewportP* @this = &this)
            { ClearRequestFlags_PInvoke(@this); }
        }

        [DllImport("Mochi.DearImGui.Native", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?CalcWorkRectPos@ImGuiViewportP@@QEBA?AUImVec2@@AEBU2@@Z", ExactSpelling = true)]
        private static extern Vector2* CalcWorkRectPos_PInvoke(ImGuiViewportP* @this, Vector2* __returnBuffer, Vector2* off_min);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public Vector2 CalcWorkRectPos(in Vector2 off_min)
        {
            Vector2 __returnBuffer;

            fixed (ImGuiViewportP* @this = &this)
            fixed (Vector2* __off_minP = &off_min)
            { CalcWorkRectPos_PInvoke(@this, &__returnBuffer, __off_minP); }

            return __returnBuffer;
        }

        [DllImport("Mochi.DearImGui.Native", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?CalcWorkRectSize@ImGuiViewportP@@QEBA?AUImVec2@@AEBU2@0@Z", ExactSpelling = true)]
        private static extern Vector2* CalcWorkRectSize_PInvoke(ImGuiViewportP* @this, Vector2* __returnBuffer, Vector2* off_min, Vector2* off_max);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public Vector2 CalcWorkRectSize(in Vector2 off_min, in Vector2 off_max)
        {
            Vector2 __returnBuffer;

            fixed (ImGuiViewportP* @this = &this)
            fixed (Vector2* __off_minP = &off_min)
            fixed (Vector2* __off_maxP = &off_max)
            { CalcWorkRectSize_PInvoke(@this, &__returnBuffer, __off_minP, __off_maxP); }

            return __returnBuffer;
        }

        [DllImport("Mochi.DearImGui.Native", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?UpdateWorkRect@ImGuiViewportP@@QEAAXXZ", ExactSpelling = true)]
        private static extern void UpdateWorkRect_PInvoke(ImGuiViewportP* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void UpdateWorkRect()
        {
            fixed (ImGuiViewportP* @this = &this)
            { UpdateWorkRect_PInvoke(@this); }
        }

        [DllImport("Mochi.DearImGui.Native", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetMainRect@ImGuiViewportP@@QEBA?AUImRect@@XZ", ExactSpelling = true)]
        private static extern ImRect* GetMainRect_PInvoke(ImGuiViewportP* @this, ImRect* __returnBuffer);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public ImRect GetMainRect()
        {
            ImRect __returnBuffer;

            fixed (ImGuiViewportP* @this = &this)
            { GetMainRect_PInvoke(@this, &__returnBuffer); }

            return __returnBuffer;
        }

        [DllImport("Mochi.DearImGui.Native", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetWorkRect@ImGuiViewportP@@QEBA?AUImRect@@XZ", ExactSpelling = true)]
        private static extern ImRect* GetWorkRect_PInvoke(ImGuiViewportP* @this, ImRect* __returnBuffer);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public ImRect GetWorkRect()
        {
            ImRect __returnBuffer;

            fixed (ImGuiViewportP* @this = &this)
            { GetWorkRect_PInvoke(@this, &__returnBuffer); }

            return __returnBuffer;
        }

        [DllImport("Mochi.DearImGui.Native", CallingConvention = CallingConvention.Cdecl, EntryPoint = "?GetBuildWorkRect@ImGuiViewportP@@QEBA?AUImRect@@XZ", ExactSpelling = true)]
        private static extern ImRect* GetBuildWorkRect_PInvoke(ImGuiViewportP* @this, ImRect* __returnBuffer);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public ImRect GetBuildWorkRect()
        {
            ImRect __returnBuffer;

            fixed (ImGuiViewportP* @this = &this)
            { GetBuildWorkRect_PInvoke(@this, &__returnBuffer); }

            return __returnBuffer;
        }
    }
}
