// <auto-generated>
// This file was automatically generated by Biohazrd and should not be modified by hand!
// </auto-generated>
#nullable enable
using Mochi.DearImGui.Infrastructure;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace Mochi.DearImGui.Internal
{
    [StructLayout(LayoutKind.Explicit, Size = 520)]
    public unsafe partial struct ImGuiTable
    {
        [FieldOffset(0)] public uint ID;

        [FieldOffset(4)] public ImGuiTableFlags Flags;

        [FieldOffset(8)] public void* RawData;

        [FieldOffset(16)] public ImGuiTableTempData* TempData;

        [FieldOffset(72)] public ulong EnabledMaskByDisplayOrder;

        [FieldOffset(80)] public ulong EnabledMaskByIndex;

        [FieldOffset(88)] public ulong VisibleMaskByIndex;

        [FieldOffset(96)] public ulong RequestOutputMaskByIndex;

        [FieldOffset(104)] public ImGuiTableFlags SettingsLoadedFlags;

        [FieldOffset(108)] public int SettingsOffset;

        [FieldOffset(112)] public int LastFrameActive;

        [FieldOffset(116)] public int ColumnsCount;

        [FieldOffset(120)] public int CurrentRow;

        [FieldOffset(124)] public int CurrentColumn;

        [FieldOffset(128)] public short InstanceCurrent;

        [FieldOffset(130)] public short InstanceInteracted;

        [FieldOffset(132)] public float RowPosY1;

        [FieldOffset(136)] public float RowPosY2;

        [FieldOffset(140)] public float RowMinHeight;

        [FieldOffset(144)] public float RowTextBaseline;

        [FieldOffset(148)] public float RowIndentOffsetX;

        [FieldOffset(152)] private uint __RowFlags__backingField;
        public ImGuiTableRowFlags RowFlags
        {
            get => (ImGuiTableRowFlags)((__RowFlags__backingField >> 0) & 0xFFFFU);
            set
            {
                uint shiftedValue = (((uint)value) & 0xFFFFU) << 0;
                uint otherBits = __RowFlags__backingField & 0xFFFF0000U;
                __RowFlags__backingField = otherBits | shiftedValue;
            }
        }

        [FieldOffset(152)] private uint __LastRowFlags__backingField;
        public ImGuiTableRowFlags LastRowFlags
        {
            get => (ImGuiTableRowFlags)((__LastRowFlags__backingField >> 16) & 0xFFFFU);
            set
            {
                uint shiftedValue = (((uint)value) & 0xFFFFU) << 16;
                uint otherBits = __LastRowFlags__backingField & 0xFFFFU;
                __LastRowFlags__backingField = otherBits | shiftedValue;
            }
        }

        [FieldOffset(156)] public int RowBgColorCounter;

        [FieldOffset(160)] public ConstantArray_ImU32_2 RowBgColor;

        [FieldOffset(168)] public uint BorderColorStrong;

        [FieldOffset(172)] public uint BorderColorLight;

        [FieldOffset(176)] public float BorderX1;

        [FieldOffset(180)] public float BorderX2;

        [FieldOffset(184)] public float HostIndentX;

        [FieldOffset(188)] public float MinColumnWidth;

        [FieldOffset(192)] public float OuterPaddingX;

        [FieldOffset(196)] public float CellPaddingX;

        [FieldOffset(200)] public float CellPaddingY;

        [FieldOffset(204)] public float CellSpacingX1;

        [FieldOffset(208)] public float CellSpacingX2;

        [FieldOffset(212)] public float LastOuterHeight;

        [FieldOffset(216)] public float LastFirstRowHeight;

        [FieldOffset(220)] public float InnerWidth;

        [FieldOffset(224)] public float ColumnsGivenWidth;

        [FieldOffset(228)] public float ColumnsAutoFitWidth;

        [FieldOffset(232)] public float ResizedColumnNextWidth;

        [FieldOffset(236)] public float ResizeLockMinContentsX2;

        [FieldOffset(240)] public float RefScale;

        [FieldOffset(244)] public ImRect OuterRect;

        [FieldOffset(260)] public ImRect InnerRect;

        [FieldOffset(276)] public ImRect WorkRect;

        [FieldOffset(292)] public ImRect InnerClipRect;

        [FieldOffset(308)] public ImRect BgClipRect;

        [FieldOffset(324)] public ImRect Bg0ClipRectForDrawCmd;

        [FieldOffset(340)] public ImRect Bg2ClipRectForDrawCmd;

        [FieldOffset(356)] public ImRect HostClipRect;

        [FieldOffset(372)] public ImRect HostBackupInnerClipRect;

        [FieldOffset(392)] public ImGuiWindow* OuterWindow;

        [FieldOffset(400)] public ImGuiWindow* InnerWindow;

        [FieldOffset(408)] public ImGuiTextBuffer ColumnsNames;

        [FieldOffset(424)] public ImDrawListSplitter* DrawSplitter;

        [FieldOffset(432)] public ImGuiTableColumnSortSpecs SortSpecsSingle;

        [FieldOffset(448)] public ImVector<ImGuiTableColumnSortSpecs> SortSpecsMulti;

        [FieldOffset(464)] public ImGuiTableSortSpecs SortSpecs;

        [FieldOffset(480)] public sbyte SortSpecsCount;

        [FieldOffset(481)] public sbyte ColumnsEnabledCount;

        [FieldOffset(482)] public sbyte ColumnsEnabledFixedCount;

        [FieldOffset(483)] public sbyte DeclColumnsCount;

        [FieldOffset(484)] public sbyte HoveredColumnBody;

        [FieldOffset(485)] public sbyte HoveredColumnBorder;

        [FieldOffset(486)] public sbyte AutoFitSingleColumn;

        [FieldOffset(487)] public sbyte ResizedColumn;

        [FieldOffset(488)] public sbyte LastResizedColumn;

        [FieldOffset(489)] public sbyte HeldHeaderColumn;

        [FieldOffset(490)] public sbyte ReorderColumn;

        [FieldOffset(491)] public sbyte ReorderColumnDir;

        [FieldOffset(492)] public sbyte LeftMostEnabledColumn;

        [FieldOffset(493)] public sbyte RightMostEnabledColumn;

        [FieldOffset(494)] public sbyte LeftMostStretchedColumn;

        [FieldOffset(495)] public sbyte RightMostStretchedColumn;

        [FieldOffset(496)] public sbyte ContextPopupColumn;

        [FieldOffset(497)] public sbyte FreezeRowsRequest;

        [FieldOffset(498)] public sbyte FreezeRowsCount;

        [FieldOffset(499)] public sbyte FreezeColumnsRequest;

        [FieldOffset(500)] public sbyte FreezeColumnsCount;

        [FieldOffset(501)] public sbyte RowCellDataCurrent;

        [FieldOffset(502)] public byte DummyDrawChannel;

        [FieldOffset(503)] public byte Bg2DrawChannelCurrent;

        [FieldOffset(504)] public byte Bg2DrawChannelUnfrozen;

        [FieldOffset(505)] [MarshalAs(UnmanagedType.I1)] public bool IsLayoutLocked;

        [FieldOffset(506)] [MarshalAs(UnmanagedType.I1)] public bool IsInsideRow;

        [FieldOffset(507)] [MarshalAs(UnmanagedType.I1)] public bool IsInitializing;

        [FieldOffset(508)] [MarshalAs(UnmanagedType.I1)] public bool IsSortSpecsDirty;

        [FieldOffset(509)] [MarshalAs(UnmanagedType.I1)] public bool IsUsingHeaders;

        [FieldOffset(510)] [MarshalAs(UnmanagedType.I1)] public bool IsContextPopupOpen;

        [FieldOffset(511)] [MarshalAs(UnmanagedType.I1)] public bool IsSettingsRequestLoad;

        [FieldOffset(512)] [MarshalAs(UnmanagedType.I1)] public bool IsSettingsDirty;

        [FieldOffset(513)] [MarshalAs(UnmanagedType.I1)] public bool IsDefaultDisplayOrder;

        [FieldOffset(514)] [MarshalAs(UnmanagedType.I1)] public bool IsResetAllRequest;

        [FieldOffset(515)] [MarshalAs(UnmanagedType.I1)] public bool IsResetDisplayOrderRequest;

        [FieldOffset(516)] [MarshalAs(UnmanagedType.I1)] public bool IsUnfrozenRows;

        [FieldOffset(517)] [MarshalAs(UnmanagedType.I1)] public bool IsDefaultSizingPolicy;

        [FieldOffset(518)] [MarshalAs(UnmanagedType.I1)] public bool MemoryCompacted;

        [FieldOffset(519)] [MarshalAs(UnmanagedType.I1)] public bool HostSkipItems;

        [DllImport("Mochi.DearImGui.Native", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper58", ExactSpelling = true)]
        private static extern void Constructor_PInvoke(ImGuiTable* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public ImGuiTable()
        {
            fixed (ImGuiTable* @this = &this)
            { Constructor_PInvoke(@this); }
        }

        [DllImport("Mochi.DearImGui.Native", CallingConvention = CallingConvention.Cdecl, EntryPoint = "__InlineHelper59", ExactSpelling = true)]
        private static extern void Destructor_PInvoke(ImGuiTable* @this);

        [DebuggerStepThrough, DebuggerHidden]
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public void Destructor()
        {
            fixed (ImGuiTable* @this = &this)
            { Destructor_PInvoke(@this); }
        }
    }
}
